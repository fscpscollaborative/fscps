name: (DEPLOY)

on:
  workflow_dispatch:
   inputs:
      environment:
        description: 'Select FSCM Environment'
        required: false
        default: ''
        type: choice
        options:
        - "*"

permissions:
  contents: read

defaults:
  run:
    shell: PowerShell

jobs:
   Initialization:
    runs-on: [ windows-latest ]
    outputs:
      type: ${{ steps.ReadSettings.outputs.type }}
      source_branch: ${{ steps.ReadSettings.outputs.source_branch }}
      versions: ${{ steps.ReadSettings.outputs.VersionsJson }}
      environments: ${{ steps.ReadSettings.outputs.EnvironmentsJson }}
      githubRunner: ${{ steps.ReadSettings.outputs.GitHubRunnerJson }}
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
        
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Initialize the workflow
        uses: fscpscollaborative/fscps.gh/WorkflowInitialize@v2.1
        id: init
        env:
          secrets: ${{ toJson(secrets) }}    

      - name: Read settings
        id: ReadSettings
        uses: fscpscollaborative/fscps.gh/ReadSettings@v2.1
        with:
          token: ${{ secrets.REPO_TOKEN }}
          environment: ${{ inputs.environment }}

      - name: Check for updates to FSC-PS system files
        uses: fscpscollaborative/fscps.gh/CheckForUpdates@v2.1
        continue-on-error: true
        with:
          type: ${{ steps.ReadSettings.outputs.type }}
          settingsJson: ${{ env.Settings }}
          secretsJson: ${{ env.RepoSecrets }}
   Deploy:
    needs: [ Initialization ]
    if: needs.Initialization.outputs.environments != ''
    runs-on: ${{ fromJson(needs.Initialization.outputs.githubRunner) }}
    environment: ${{ matrix.environment }}
    strategy:
      matrix:
        environment: ${{ fromJson(needs.Initialization.outputs.environments) }}
      fail-fast: false
    name: Deploy ${{ matrix.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
         ref: ${{ needs.Initialization.outputs.source_branch }}
         
      - name: Read settings
        id: ReadSettings
        uses: fscpscollaborative/fscps.gh/ReadSettings@v2.1
        with:
          environment: ${{ matrix.environment }}
          
      - name: Checkout ${{ steps.ReadSettings.outputs.SOURCE_BRANCH }}
        if: steps.ReadSettings.outputs.SOURCE_BRANCH != needs.Initialization.outputs.source_branch
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ steps.ReadSettings.outputs.SOURCE_BRANCH }}
         
      - name: Read secrets
        uses: fscpscollaborative/fscps.gh/ReadSecrets@v2.1
        env:
          secrets: ${{ toJson(secrets) }}    
        with:
          settingsJson: ${{ env.Settings }}
          
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: nuget/setup-nuget@v2.0.0
        with:
          nuget-version: 5.10.x    
          
      - name: Run pipeline
        uses: fscpscollaborative/fscps.gh/RunPipeline@v2.1
        id: runpipeline
        with:
          type: ${{ needs.Initialization.outputs.type}}
          environment_name: ${{ matrix.environment }}
          settingsJson: ${{ env.Settings }}
          secretsJson: ${{ env.RepoSecrets }}
            
      - name: Add logs to job summary
        run: |
          if (![string]::IsNullOrEmpty("${{ env.ARTIFACTS_PATH }}")) {
            $logFiles = Get-ChildItem -Path "${{ env.ARTIFACTS_PATH }}\Logs" -Recurse -Filter *.log
            $summary = "# Logs `n`n"
            if ($logFiles) {
                foreach ($logFile in $logFiles) {
                    $content = Get-Content -Path $logFile.FullName
                    $summary += "## $($logFile) `n"
                    foreach ($line in $content) {
                        # if the line consists only of = or - characters 
                        # (which would be interpreted as a setext heading 
                        # (https://github.github.com/gfm/#setext-headings)), 
                        # add a new line before it
                        if ($line -match "^[=-]+$") {
                            $summary += "`n$line`n"
                        } else {
                          $summary += $line + "`n"
                        } 
                    }
                }
            }
            $summary >> $env:GITHUB_STEP_SUMMARY
          }
              
   PostProcess: 
    if: ${{ !cancelled() }}
    runs-on: ${{ fromJson(needs.Initialization.outputs.githubRunner) }}
    needs: [ Initialization,  Deploy ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Read settings
        uses: fscpscollaborative/fscps.gh/ReadSettings@v2.1

      - name: Read secrets
        uses: fscpscollaborative/fscps.gh/ReadSecrets@v2.1
        env:
          secrets: ${{ toJson(secrets) }}    
        with:
          settingsJson: ${{ env.Settings }}
          
      - name: Finalize the workflow
        id: PostProcess
        uses: fscpscollaborative/fscps.gh/WorkflowPostProcess@v2.1
        with:
          remove_current: ${{ needs.Initialization.outputs.environments == '' }}
          settingsJson: ${{ env.Settings }}
          secretsJson: ${{ env.RepoSecrets }}
