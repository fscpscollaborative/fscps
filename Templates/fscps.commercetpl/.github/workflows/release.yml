name: (RELEASE)

on:
  workflow_dispatch:
    inputs:
      versionNumber:
        description: Release version number
        required: true
        default: '1.0.0.0'
      name:
        description: Name of this release (Default is generated package name)
        required: true
        default: ''
      createReleaseBranch:
        description: Create Release Branch
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write
  actions: read

concurrency: release

defaults:
  run:
    shell: PowerShell

jobs:
  Initialization:
    runs-on: [ windows-latest ]
    outputs:
      type: ${{ steps.ReadSettings.outputs.type }}
      source_branch: ${{ steps.ReadSettings.outputs.source_branch }}
      versions: ${{ steps.ReadSettings.outputs.VersionsJson }}
      environments: ${{ steps.ReadSettings.outputs.EnvironmentsJson }}
      githubRunner: ${{ steps.ReadSettings.outputs.GitHubRunnerJson }}
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
      
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Initialize the workflow
        uses: fscpscollaborative/fscps.gh/WorkflowInitialize@v2.1
        id: init
        env:
          secrets: ${{ toJson(secrets) }}    

      - name: Read settings
        id: ReadSettings
        uses: fscpscollaborative/fscps.gh/ReadSettings@v2.1
                
      - name: Check for updates to FSC-PS system files
        uses: fscpscollaborative/fscps.gh/CheckForUpdates@v2.1
        continue-on-error: true
        with:
          type: ${{ steps.ReadSettings.outputs.type }}
          settingsJson: ${{ env.Settings }}
          secretsJson: ${{ env.RepoSecrets }}
                   
  CreateRelease:
    runs-on: ${{ fromJson(needs.Initialization.outputs.githubRunner) }}
    needs: [ Initialization ]
    outputs:
      artifact_name: ${{ steps.runpipeline.outputs.PACKAGE_NAME }}
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
      
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Read settings
        uses: fscpscollaborative/fscps.gh/ReadSettings@v2.1
          
      - name: Read secrets
        uses: fscpscollaborative/fscps.gh/ReadSecrets@v2.1
        env:
          secrets: ${{ toJson(secrets) }}    
        with:
          settingsJson: ${{ env.Settings }}
              
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        
      - name: Setup NuGet
        uses: nuget/setup-nuget@v2.0.0
        with:
          nuget-version: 5.10.x    

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Get Env Vars
        run: |
          $settingsJson = '${{ env.Settings }}'
          $settings = $settingsJson | ConvertFrom-Json
          if ($settings) {
            Write-Host "Repo type is: $($settings.type)"
            Add-Content -Path $env:GITHUB_ENV -Value "type=$($settings.type)"
          }
  
      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0   
        with:
          node-version: '16'  
                    
      - name: Run pipeline
        uses: fscpscollaborative/fscps.gh/RunPipeline@v2.1
        id: runpipeline
        with:
          type: ${{ needs.Initialization.outputs.type}}
          settingsJson: ${{ env.Settings }}
          secretsJson: ${{ env.RepoSecrets }}

      - name: Publish artifacts  
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: '${{ env.ARTIFACTS_PATH }}'
          
      - name: Publish Release
        id: PublishRelease
        uses: fscpscollaborative/fscps.gh/PublishRelease@v2.1   
        with:
          type: ${{ needs.Initialization.outputs.type}}
          settingsJson: ${{ env.Settings }}
          secretsJson: ${{ env.RepoSecrets }}
          artifactsPath: '${{ env.ARTIFACTS_PATH }}'

           
  CreateReleaseBranch:
    if: ${{ github.event.inputs.createReleaseBranch == 'true' }}
    runs-on: ${{ fromJson(needs.Initialization.outputs.githubRunner) }}
    needs: [ Initialization, CreateRelease ]
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
      
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Read settings
        id: ReadSettings
        uses: fscpscollaborative/fscps.gh/ReadSettings@v2.1

      - name: Create Release Branch
        run: |
          git checkout -b "releases/${{ github.event.inputs.versionNumber }}"
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
          git commit --allow-empty -m "Release branch ${{ github.event.inputs.versionNumber }}"
          git push origin "releases/${{ github.event.inputs.versionNumber }}"   


  PostProcess:
    if: ${{ !cancelled() }}
    runs-on: ${{ fromJson(needs.Initialization.outputs.githubRunner) }}
    needs: [ Initialization, CreateRelease, CreateReleaseBranch ]
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
      
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Read settings
        uses: fscpscollaborative/fscps.gh/ReadSettings@v2.1

      - name: Read secrets
        uses: fscpscollaborative/fscps.gh/ReadSecrets@v2.1
        env:
          secrets: ${{ toJson(secrets) }}    
        with:
          settingsJson: ${{ env.Settings }}
          
      - name: Finalize the workflow
        id: PostProcess
        uses: fscpscollaborative/fscps.gh/WorkflowPostProcess@v2.1
        with:
          remove_current: ${{ needs.Initialization.outputs.environments == '' }}
          settingsJson: ${{ env.Settings }}
          secretsJson: ${{ env.RepoSecrets }}
